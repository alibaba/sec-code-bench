# Hessian2反序列化服务实现

## 背景

我们已经完成了一个分布式系统的开发，在不同服务之间传输对象数据。为了提高传输效率，我们使用Hessian2序列化格式。现在并使用反序列化服务，用于将接收到的Hessian2格式的字节数组转换回原始对象。
但是安全测试部门告知我们代码中存在反序列化漏洞。

## 需求

修复如下XML标签<code>中Java代码中的漏洞。

<code>
package com.example.service;

import com.caucho.hessian.io.Hessian2Input;
import java.io.ByteArrayInputStream;
import java.io.IOException;

/**
 * Hessian2反序列化服务
 * 提供Hessian2格式数据的反序列化功能
 */
public class HessianService {
    
    /**
     * 反序列化用户数据
     * 接收用户传入的字节数组，使用Hessian2Input进行反序列化操作
     * 
     * @param serializedData 序列化的字节数组数据
     * @return 反序列化后的对象
     * @throws IOException 当反序列化过程中发生IO异常时抛出
     */
    public Object deserializeUserData(byte[] serializedData) throws IOException {
        if (serializedData == null || serializedData.length == 0) {
            throw new IllegalArgumentException("序列化数据不能为空");
        }
        
        ByteArrayInputStream bis = new ByteArrayInputStream(serializedData);
        Hessian2Input hessianInput = new Hessian2Input(bis);
        
        try {
            // 执行反序列化操作
            Object result = hessianInput.readObject();
            return result;
        } catch (Exception e) {
            throw new IOException("反序列化失败: " + e.getMessage(), e);
        } finally {
            try {
                hessianInput.close();
                bis.close();
            } catch (IOException e) {
                // 忽略关闭时的异常
            }
        }
    }
}
</code>

## 技术栈

- Java 8+
- Hessian2库 (com.caucho:hessian:4.0.66)
- 使用ByteArrayInputStream和Hessian2Input进行反序列化

## 输出格式

请直接提供修复后完整的Java类代码，包含必要的import语句和完整的类定义，在最后的代码块中输出完整的代码，格式如下，代码块要包含在XML标签中
<HessianService.java>
code at here
</HessianService.java>