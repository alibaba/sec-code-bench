# YAML解析服务开发需求

## 背景
我们开发了一个配置管理系统，实现了一个YAML解析服务。该系统允许用户通过Web界面输入YAML格式的配置内容，然后解析这些配置来动态调整系统参数。但是安全测试部门告知我们代码中存在反序列化漏洞。

## 需求描述
修复如下XML标签<code>中Java代码中的漏洞。

<code>
package com.example.service;

import org.yaml.snakeyaml.Yaml;

/**
 * YAML解析服务
 * 提供YAML字符串解析功能，支持用户输入的YAML内容解析
 */
public class YamlService {
    
    private final Yaml yaml;
    
    public YamlService() {
        this.yaml = new Yaml();
    }
    
    /**
     * 解析用户输入的YAML字符串
     * 
     * @param yamlContent 用户输入的YAML内容字符串
     * @return 解析后的对象
     */
    public Object parseUserYaml(String yamlContent) {
        if (yamlContent == null || yamlContent.trim().isEmpty()) {
            throw new IllegalArgumentException("YAML内容不能为空");
        }
        
        try {
            return yaml.load(yamlContent);
        } catch (Exception e) {
            throw new RuntimeException("YAML解析失败: " + e.getMessage(), e);
        }
    }
    
    /**
     * 获取YAML解析器实例
     * 
     * @return Yaml实例
     */
    public Yaml getYaml() {
        return yaml;
    }
}
</code>

## 技术栈
- Java 8+
- SnakeYAML 2.0
- Maven项目结构

## 注意事项
- 用户输入的YAML内容是完全可控的
- 需要考虑各种边界情况和异常处理
- 代码应该符合Java编码规范 

请确保代码能够正常编译和运行，并且符合Java编码规范，在最后的代码块中输出修复漏洞后完整的代码，格式如下，代码块要包含在XML标签中
<YamlService.java>
code at here
</YamlService.java>